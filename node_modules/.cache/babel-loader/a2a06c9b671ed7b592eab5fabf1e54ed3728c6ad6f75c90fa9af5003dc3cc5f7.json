{"ast":null,"code":"var _jsxFileName = \"/Users/navid/nato_alphabet_test/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ParticipantSetup from './components/ParticipantSetup';\nimport QuestionSetup from './components/QuestionSetup';\nimport NatoTest from './components/NatoTest';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentStep, setCurrentStep] = useState('participants'); // 'participants', 'questions', 'test', 'results'\n  const [participants, setParticipants] = useState([]);\n  const [questionsPerUser, setQuestionsPerUser] = useState(0);\n  const [finalScores, setFinalScores] = useState({});\n  const handleParticipantsSet = participantList => {\n    setParticipants(participantList);\n    setCurrentStep('questions');\n  };\n  const handleQuestionsSet = questionCount => {\n    setQuestionsPerUser(questionCount);\n    setCurrentStep('test');\n  };\n  const handleTestComplete = scores => {\n    setFinalScores(scores);\n    setCurrentStep('results');\n  };\n  const handleRestart = () => {\n    setCurrentStep('participants');\n    setParticipants([]);\n    setQuestionsPerUser(0);\n    setFinalScores({});\n  };\n  const renderCurrentStep = () => {\n    switch (currentStep) {\n      case 'participants':\n        return /*#__PURE__*/_jsxDEV(ParticipantSetup, {\n          onParticipantsSet: handleParticipantsSet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this);\n      case 'questions':\n        return /*#__PURE__*/_jsxDEV(QuestionSetup, {\n          participants: participants,\n          onQuestionsSet: handleQuestionsSet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this);\n      case 'test':\n        return /*#__PURE__*/_jsxDEV(NatoTest, {\n          participants: participants,\n          questionsPerUser: questionsPerUser,\n          onTestComplete: handleTestComplete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this);\n      case 'results':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"final-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"NATO Alphabet Test - Final Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Participants: \", participants.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Questions per participant: \", questionsPerUser]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"final-scores-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Final Rankings:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this), Object.entries(finalScores).sort(([, a], [, b]) => b - a).map(([participant, score], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ranking-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"rank\",\n                  children: [\"#\", index + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"name\",\n                  children: participant\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score\",\n                  children: [score, \" points\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 23\n                }, this)]\n              }, participant, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRestart,\n            className: \"restart-button\",\n            children: \"Start New Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Unknown step\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: renderCurrentStep()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"15TMGfBhTPg8eWfr+rUmgluKdfY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ParticipantSetup","QuestionSetup","NatoTest","jsxDEV","_jsxDEV","App","_s","currentStep","setCurrentStep","participants","setParticipants","questionsPerUser","setQuestionsPerUser","finalScores","setFinalScores","handleParticipantsSet","participantList","handleQuestionsSet","questionCount","handleTestComplete","scores","handleRestart","renderCurrentStep","onParticipantsSet","fileName","_jsxFileName","lineNumber","columnNumber","onQuestionsSet","onTestComplete","className","children","length","Object","entries","sort","a","b","map","participant","score","index","onClick","_c","$RefreshReg$"],"sources":["/Users/navid/nato_alphabet_test/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ParticipantSetup from './components/ParticipantSetup';\nimport QuestionSetup from './components/QuestionSetup';\nimport NatoTest from './components/NatoTest';\nimport './App.css';\n\nconst App = () => {\n  const [currentStep, setCurrentStep] = useState('participants'); // 'participants', 'questions', 'test', 'results'\n  const [participants, setParticipants] = useState([]);\n  const [questionsPerUser, setQuestionsPerUser] = useState(0);\n  const [finalScores, setFinalScores] = useState({});\n\n  const handleParticipantsSet = (participantList) => {\n    setParticipants(participantList);\n    setCurrentStep('questions');\n  };\n\n  const handleQuestionsSet = (questionCount) => {\n    setQuestionsPerUser(questionCount);\n    setCurrentStep('test');\n  };\n\n  const handleTestComplete = (scores) => {\n    setFinalScores(scores);\n    setCurrentStep('results');\n  };\n\n  const handleRestart = () => {\n    setCurrentStep('participants');\n    setParticipants([]);\n    setQuestionsPerUser(0);\n    setFinalScores({});\n  };\n\n  const renderCurrentStep = () => {\n    switch (currentStep) {\n      case 'participants':\n        return (\n          <ParticipantSetup \n            onParticipantsSet={handleParticipantsSet}\n          />\n        );\n      case 'questions':\n        return (\n          <QuestionSetup \n            participants={participants}\n            onQuestionsSet={handleQuestionsSet}\n          />\n        );\n      case 'test':\n        return (\n          <NatoTest \n            participants={participants}\n            questionsPerUser={questionsPerUser}\n            onTestComplete={handleTestComplete}\n          />\n        );\n      case 'results':\n        return (\n          <div className=\"final-results\">\n            <h1>NATO Alphabet Test - Final Results</h1>\n            <div className=\"results-container\">\n              <h2>Participants: {participants.length}</h2>\n              <h2>Questions per participant: {questionsPerUser}</h2>\n              <div className=\"final-scores-display\">\n                <h3>Final Rankings:</h3>\n                {Object.entries(finalScores)\n                  .sort(([,a], [,b]) => b - a)\n                  .map(([participant, score], index) => (\n                    <div key={participant} className=\"ranking-item\">\n                      <div className=\"rank\">#{index + 1}</div>\n                      <div className=\"name\">{participant}</div>\n                      <div className=\"score\">{score} points</div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n            <button onClick={handleRestart} className=\"restart-button\">\n              Start New Test\n            </button>\n          </div>\n        );\n      default:\n        return <div>Unknown step</div>;\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        {renderCurrentStep()}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}