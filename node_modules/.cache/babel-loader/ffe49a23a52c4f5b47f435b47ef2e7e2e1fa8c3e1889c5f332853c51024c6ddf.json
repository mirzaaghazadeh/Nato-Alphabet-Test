{"ast":null,"code":"var _jsxFileName = \"/Users/navid/nato_alphabet_test/src/components/QuestionSetup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionSetup = ({\n  participants,\n  onQuestionsSet\n}) => {\n  _s();\n  const [questionsPerUser, setQuestionsPerUser] = useState(5);\n  const handleSubmit = () => {\n    if (questionsPerUser > 0) {\n      onQuestionsSet(questionsPerUser);\n    }\n  };\n  const totalQuestions = participants.length * questionsPerUser;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-setup\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Question Configuration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"participants-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Participants: \", participants.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: participants.map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-config\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"question-count\",\n        children: \"Questions per participant:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"question-count\",\n        type: \"number\",\n        min: \"1\",\n        max: \"50\",\n        value: questionsPerUser,\n        onChange: e => setQuestionsPerUser(parseInt(e.target.value) || 1),\n        className: \"question-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"total-questions\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Total questions: \", totalQuestions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"start-test-button\",\n      children: \"Start Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionSetup, \"AFeDiX2UJKAuEkjo/hviuGPGhno=\");\n_c = QuestionSetup;\nexport default QuestionSetup;\nvar _c;\n$RefreshReg$(_c, \"QuestionSetup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QuestionSetup","participants","onQuestionsSet","_s","questionsPerUser","setQuestionsPerUser","handleSubmit","totalQuestions","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","name","index","htmlFor","id","type","min","max","value","onChange","e","parseInt","target","onClick","_c","$RefreshReg$"],"sources":["/Users/navid/nato_alphabet_test/src/components/QuestionSetup.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst QuestionSetup = ({ participants, onQuestionsSet }) => {\n  const [questionsPerUser, setQuestionsPerUser] = useState(5);\n\n  const handleSubmit = () => {\n    if (questionsPerUser > 0) {\n      onQuestionsSet(questionsPerUser);\n    }\n  };\n\n  const totalQuestions = participants.length * questionsPerUser;\n\n  return (\n    <div className=\"question-setup\">\n      <h2>Question Configuration</h2>\n      <div className=\"participants-summary\">\n        <h3>Participants: {participants.length}</h3>\n        <ul>\n          {participants.map((name, index) => (\n            <li key={index}>{name}</li>\n          ))}\n        </ul>\n      </div>\n      \n      <div className=\"question-config\">\n        <label htmlFor=\"question-count\">\n          Questions per participant:\n        </label>\n        <input\n          id=\"question-count\"\n          type=\"number\"\n          min=\"1\"\n          max=\"50\"\n          value={questionsPerUser}\n          onChange={(e) => setQuestionsPerUser(parseInt(e.target.value) || 1)}\n          className=\"question-input\"\n        />\n      </div>\n      \n      <div className=\"total-questions\">\n        <strong>Total questions: {totalQuestions}</strong>\n      </div>\n      \n      <button onClick={handleSubmit} className=\"start-test-button\">\n        Start Test\n      </button>\n    </div>\n  );\n};\n\nexport default QuestionSetup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}